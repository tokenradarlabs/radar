// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  alerts    Alert[]
  apiKeys   ApiKey[]
}

model Token {
  id      String  @id @default(uuid())
  address String  @unique
  alerts  Alert[]
}

enum PriceAlertDirection {
  up
  down
}

model Alert {
  id         String        @id @default(uuid())
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
  enabled    Boolean       @default(true)
  priceAlert PriceAlert?  @relation("AlertToPriceAlert")
  userId     String
  user       User         @relation(fields: [userId], references: [id])
  tokenId    String
  token      Token        @relation(fields: [tokenId], references: [id])
}

model PriceAlert {
  id        String              @id @default(uuid())
  direction PriceAlertDirection
  value     Float
  alertId   String              @unique
  alert     Alert               @relation("AlertToPriceAlert", fields: [alertId], references: [id])
}

model ApiKey {
  id          String   @id @default(uuid())
  key         String   @unique
  name        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  lastUsedAt  DateTime @default(now())
  isActive    Boolean  @default(true)
  userId      String
  user        User     @relation(fields: [userId], references: [id])
}
